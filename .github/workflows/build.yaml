name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  install:
    name: Install package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Check package-lock.json
        run: npm run package:check

      - name: Install package
        run: npm ci

      - name: Install Template
        uses: ./.github/actions/setup-template
        with:
          run-command: npm install

  commitlint:
    if: github.event_name == 'pull_request'
    name: CommitLint
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose --color

  lint:
    name: Lint code
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run lint
        run: npm run lint

      - name: Run lint Template
        uses: ./.github/actions/setup-template
        with:
          run-command: npm run lint

  test:
    name: Test
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run test
        run: npm run test

      - name: Run Playwright install
        uses: ./.github/actions/setup-template
        with:
          run-command: npm run playwright:install -- --with-deps

      - name: Run init MSW
        uses: ./.github/actions/setup-template
        with:
          run-command: npx msw init

      - name: Run test Template
        uses: ./.github/actions/setup-template
        with:
          run-command: npm run test

  #      - name: Upload sonar reports
  #        if: matrix.node-version == '20.x'
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: sonar-reports
  #          path: coverage/lcov.info

  #  sonarcloud:
  #    name: SonarCloud Scan
  #    needs:
  #      - test
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout repository
  #        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
  #        with:
  #          fetch-depth: 0
  #
  #      - name: Download test reports
  #        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
  #        with:
  #          name: sonar-reports
  #
  #      - name: SonarCloud Scan
  #        uses: SonarSource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97 # v5.1.0
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run build
        run: npm run build

      - name: Run build Template
        uses: ./.github/actions/setup-template
        with:
          run-command: npm run build
